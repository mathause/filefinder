name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: py${{ matrix.python-version }} ${{ matrix.env }}

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.12", "3.13"]
        os: [ "ubuntu-latest"]
        env: [""]
        include:
          - env: "min_all_deps"
            os: "ubuntu-latest"
            python-version: "3.10"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for all branches and tags.

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set environment variables
      run: |
        if [[ "${{ matrix.env }}" == "" ]]; then
          echo "PIP_ENV_FILE=environment.txt" >> $GITHUB_ENV
        else
          echo "PIP_ENV_FILE=${{ matrix.env }}.txt" >> $GITHUB_ENV
        fi

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov
        python -m pip install -r "ci/requirements/${{ env.PIP_ENV_FILE }}"
        python -m pip install -e .

    - name: List dependencies
      run: |
        python -m pip list

    - name: Test with pytest
      run: python -m pytest
        --cov=filefisher
        --cov-report=xml
        --junitxml=test-results/${{ runner.os }}-${{ matrix.python-version }}.xml

    - name: Upload code coverage to Codecov
      uses: codecov/codecov-action@v5
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
          file: ./coverage.xml
          flags: unittests
          env_vars: RUNNER_OS,PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false

  doctest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest -e .
    - name: Test with pytest
      run: |
        python -m pytest --doctest-modules filefisher --ignore filefisher/tests
